swagger: "2.0"
info:
  description: "API Documentation for Sales"
  version: "1.0.0"
  title: "erp-2175-erp-sales"
  #termsOfService: "http://swagger.io/terms/"
  contact:
    email: "bpj1651@rit.edu"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "vm344h.se.rit.edu"
schemes:
- "http"
paths:
  /wholesale/account/new:
    post:
      description: "Add a new wholesale account to the sales system"
      operationId: "addWholesaleAccount"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Add a new wholesale account to the sale system"
        required: true
        schema:
          $ref: "#/definitions/WholesaleAccount"
      responses:
        201:
          description: "Created"
  /wholesale/accounts:
    get:
      description: "Get all wholesale accounts"
      operationId: "getWholesaleAccounts"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
  /orders:
    get:
      description: "HR Endpoint for getting information about sales rep"
      operationId: "getSalesRep"
      produces:
      - "application/json"
      parameters:
      - in: "query"
        name: "sales_rep_id"
        type: "string"
        required: true

      - in: "query"
        name: "date_from"
        type: "string"
        required: true

      - in: "query"
        name: "date_to"
        type: "string"
        required: true
      responses:
        200:
          description: "OK"

  /orders/retail/new:
    post:
      description: "Add a new retail order to the sales system"
      operationId: "addRetailOrder"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Retail order object that needs to be added to the Sales System"
        required: true
        schema:
          $ref: "#/definitions/RetailOrder"
      responses:
        201:
          description: "Created"

  /orders/wholesale/new:
    post:
      description: "Add a new wholesale order to the sales system"
      operationId: "addWholesaleOrder"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Add a new wholesale order to the sales system"
        required: true
        schema:
          $ref: "#/definitions/WholesaleOrder"
      responses:
        201:
          description: "Created"
  /orders/new/refund:
    post:
      description: "Support submitting of $0 orders"
      operationId: "zeroDollarOrder"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Support submitting of $0 orders"
        required: true
        schema:
          $ref: "#/definitions/RetailOrder"
      responses:
        201:
          description: "Created"

  /orders/completed:
    get:
      description: "Gets a completed Order"
      operationId: "getOrder"
      produces:
      - "application/json"
      parameters:
      - in: "query"
        name: "serial_num"
        type: "string"
        required: true
      responses:
        200:
          description: "OK"

  /orders/update/status:
    patch:
       description: "Update the status of an order"
       operationId: "changeOrderStatus"
       produces:
       - "application/json"
       parameters:
       - in: "query"
         name: "id"
         type: "string"
         required: true
         description: "ID of the order"

       - in: "query"
         name: "status"
         type: "string"
         required: true
         description: "New status of the order"

       responses:
         202:
           description: "Updated"
  /revenue/:
    get:
      description: "Gets total revenue made by the organization"
      operationId: "getTotalRevenue"
      produces:
      - "application/json"
      parameters:
      - in: "query"
        name: "date_from"
        type: "string"
        required: false

      - in: "query"
        name: "date_to"
        type: "string"
        required: false

      responses:
        200:
          description: "OK"

  /revenue/region/{region}:
    get:
      description: "Get total revenue from a region (regions are 'north', 'south', 'east', 'west')"
      operationId: "getRevenueFromRegion"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "region"
        required: true
        type: "string"

      - in: "query"
        name: "date_from"
        type: "string"
        required: false

      - in: "query"
        name: "date_to"
        type: "string"
        required: false
      responses:
        200:
          description: "OK"

  /revenue/{sales_rep_id}:
      get:
        description: "Gets total revenue made by a sales rep"
        operationId: "getRevenueForSalesRep"
        produces:
        - "application/json"
        parameters:
        - in: "path"
          name: "sales_rep_id"
          required: true
          type: "string"
          minimum: 1

        - in: "query"
          name: "date_from"
          type: "string"
          required: false

        - in: "query"
          name: "date_to"
          type: "string"
          required: false

        responses:
          200:
            description: "OK"

definitions:
  RetailOrder:
    type: "object"
    properties:
      customerEmail:
        type: "string"
      customerShippingStreetAddress:
        type: "string"
      customerShippingZip:
        type: "string"
      customerShippingTown:
        type: "string"
      customerShippingState:
        type: "string"

      status:
        type: "string"
        enum:
        - "fulfilled"
        - "shipped"
        - "arrived"
      totalPrice:
        type: "number"
      products:
        type: "array"
        items:
          $ref: "#/definitions/Product"

  WholesaleOrder:
    type: "object"
    properties:
      wholesaleAccount:
        $ref: "#/definitions/WholesaleAccount"
      salesRep:
        $ref: "#/definitions/SalesRep"

      status:
        type: "string"
        enum:
        - "placed"
        - "paid"
        - "fulfilled"
        - "shipped"
        - "arrived"

      orderMap:
        type: "array"
        items:
          $ref: "#/definitions/ModelCount"

      totalPrice:
        type: "number"

  Product:
    type: "object"
    properties:
      model:
        type: "string"

      serialNumber:
        type: "string"

      refurbished:
        type: "boolean"

      priceSoldAt:
        type: "number"

  ModelCount:
    description: "A key value pair of a model to quantity"
    type: "object"
    properties:
      model:
        type: "string"

      quantity:
        type: "integer"

  WholesaleAccount:
    type: "object"
    properties:
      email:
        type: "string"

      shippingAddress:
        type: "string"

      shippingState:
        type: "string"

      shippingTown:
        type: "string"

      shippingZip:
        type: "string"

      configuredPrice:
        $ref: "#/definitions/ConfiguredPrice"

  SalesRep:
    type: "object"
    properties:
      firstName:
        type: "string"

      lastName:
        type: "string"

      region:
        type: "string"
        enum:
        - "north"
        - "south"
        - "east"
        - "west"
  ConfiguredPrice:
    type: "object"
    properties:
      model:
        type: "string"
      price:
        type: "number"


externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"